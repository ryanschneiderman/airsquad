<script>
	var team_stats_table;
	var adv_stats_team_table; 
	var display_stats = [];
	var display_stats_adv = [];
	var display_stats_team_adv = []
	var player_stats = [];
	var team_stat_array = [];
	var team_advanced_stat_array = [];
	var opponent_stat_array = [];
	var make_radius = 5;

	var minutes_p_q = "<%=@minutes_p_q%>"
	var per_minute_factor = parseInt(minutes_p_q) * 3;


	


	function create_player_shot_chart(player, module_id){
		var canvas_vars = initialize_canvas(.3, .7, 'player-canvas-' + module_id, 2);

	    plotBasket(canvas_vars.canvas_width/1.978, canvas_vars.canvas_height/11.5, 7, canvas_vars.canvas_width, canvas_vars.canvas);
    	populate_player_shot_chart(player, canvas_vars.canvas, canvas_vars.canvas_width);

    	$(window).resize(function(){
	        canvas_vars.canvas.getObjects().forEach(function(o){
	        	switch(o.type){
	        		case "MakeSymbol" :
		        		var old_canvas_width = o.canvas_width;
		        		var change_ratio = old_canvas_width/canvas_vars.canvas.width;

		        		o.set({left: o.left/ change_ratio, top: o.top / change_ratio, canvas_width: canvas_vars.canvas.width});
		        		o.setCoords();
		        		canvas_vars.canvas.calcOffset();
		  				canvas_vars.canvas.renderAll();
	        		break;
	        		case "Basket" :
	        			var old_canvas_width = o.canvas_width;
		        		var change_ratio = old_canvas_width/canvas_vars.canvas.width;
		        		var basket_radius = o.radius /change_ratio

		        		o.set({left: o.left/ change_ratio, top: o.top / change_ratio, canvas_width: canvas_vars.canvas.width, radius: basket_radius});
		        		o.setCoords();
		        		canvas_vars.canvas.calcOffset();
		  				canvas_vars.canvas.renderAll();
		  			break;
	        		case "MissSymbol" :
	        			var old_canvas_width = o.canvas_width;
		        		var change_ratio = old_canvas_width/canvas_vars.canvas.width;
		        		o.set({x1: o.x1 / change_ratio, y1: o.y1 / change_ratio, x2: o.x2 / change_ratio, y2: o.y2 / change_ratio, canvas_width: canvas_vars.canvas.width});
		        		o.setCoords();
		        		canvas_vars.canvas.calcOffset();
		        		canvas_vars.canvas.renderAll();
	        		break
	        	}
	    	})
	    })
	}

	function set_player_canvas_dimensions(canvas, background_img, player_canvas_height, player_canvas_width){
        canvas.setHeight(player_canvas_height);
        canvas.setWidth(player_canvas_width);
        background_img.scaleToHeight(player_canvas_height);
        canvas.setBackgroundImage(background_img, canvas.renderAll.bind(canvas), {
            top: 0,
            left: 0
        });
    }


	function populate_player_shot_chart(player, canvas, player_canvas_width){
		var make_radius = 5;
		<% @shot_chart_data.each do |shot|%>
    		var metadata = "<%=shot.metadata%>"
    		metadata = metadata.replace(/&quot;/g,'"');
    		metadata = JSON.parse(metadata.replace(/=&gt;/g, ':'));
    		var y_loc = parseFloat(metadata.y_loc) * player_canvas_width - 5;
    		var x_loc = parseFloat(metadata.x_loc) * player_canvas_width - 5;
    		var shot_val = parseInt(metadata.shot_val);
    		var player_id = "<%=shot.member_id%>";

    		if("<%=shot.stat_list_id%>" == "1" && parseInt(player_id) == player.id){
    			player.make_granules.push(metadata)
    			make = plot_make(y_loc, x_loc, make_radius, player_id, true, shot_val, null, null, player_canvas_width, canvas);
    			make.set({evented: false, selectable: false})
    		}
    		else if ("<%=shot.stat_list_id%>" == "2" && parseInt(player_id) == player.id){
    			player.miss_granules.push(metadata)
    			miss = plot_miss([x_loc, y_loc, x_loc , y_loc ], player_id, true, shot_val, null, null, player_canvas_width, canvas);
    			miss.set({evented: false, selectable: false})
    		}
    	<%end%>
	}

	function expand(module_num, button){
		var player_module = $("#player-module-" + module_num)
		var curHeight = player_module.height();
		var advanced_table = player_module.children(".player-advanced-stats");
		var shot_chart = player_module.children(".canvas-container")
		var per_minute_table = player_module.children(".player-per-minute-stats")
		var full_profile = player_module.children(".full-profile");
		if(advanced_table.css("display") == "none"){
			advanced_table.show();
			shot_chart.show()
			per_minute_table.show()
			full_profile.show()

			button.style.transform = "rotate(-135deg)";
			autoHeight = player_module.css('height', 'auto').height();
			player_module.height(curHeight).animate({
				height: autoHeight
			}, 275, function(){
				player_module.css('height', 'auto');
			});
		}
		
		else{
			advanced_table.hide();
			shot_chart.hide()
			per_minute_table.hide()
			full_profile.hide()
			autoHeight = player_module.css('height', 'auto').height();
			button.style.transform = "rotate(45deg)";
			player_module.height(curHeight).animate({
				height: autoHeight
			}, 275, function(){
				player_module.css('height', 'auto');
			})
		}
	}



	/**********************************************************************************************************************************************/
	/**********************************************************************************************************************************************/
	/*************************************************************** <SHOT CHARTS> ****************************************************************/
	/**********************************************************************************************************************************************/
	/**********************************************************************************************************************************************/
	

    function populate_shot_chart(canvas, canvas_width){

    	<% @shot_chart_data.each do |shot|%>
    		var metadata = "<%=shot.metadata%>"
    		metadata = metadata.replace(/&quot;/g,'"');
    		metadata = JSON.parse(metadata.replace(/=&gt;/g, ':'));
    		var y_loc = parseFloat(metadata.y_loc) * canvas_width - 5;
    		var x_loc = parseFloat(metadata.x_loc) * canvas_width - 5;
    		var shot_val = parseInt(metadata.shot_val);
    		var player_id = "<%=shot.member_id%>";
    		
    		if("<%=shot.stat_list_id%>" == "1" ){
    			make = plot_make(y_loc, x_loc, make_radius, player_id, true, shot_val, null, null, canvas_width, canvas);
    			make.set({evented: false, selectable: false})
    		}
    		else if ("<%=shot.stat_list_id%>" == "2" ){
    			miss = plot_miss([x_loc, y_loc, x_loc , y_loc ], player_id, true, shot_val, null, null, canvas_width, canvas);
    			miss.set({evented: false, selectable: false})
    		}
    	<%end%>
    }

    function shot_chart_button(id, button, canvas){
		canvas.getObjects().forEach(function(o){
			if(o.type != "Basket"){	
				o.set({opacity: 1,
				})
			}
		});	

		canvas.getObjects().forEach(function(o){
			if(o.type != "Basket"){
				if(o.id != id || o.player == false){
					o.set({opacity: 0,
					})
				}
			}
		});	
		canvas.renderAll();
	}

    function populate_player_shot_charts(){
		var len = player_stats.length;
		var html_string = "";
		for(var i = 0; i < len; i++){
			html_string += "<button class = 'shot-chart-button' type = 'button' onclick='shot_chart_button(" + player_stats[i].id +", this)'> " + player_stats[i].name + " </button>"
		}
		$("#player-shot-chart-buttons").html(html_string)

		$("#player-shot-chart-buttons").css("grid-template-rows", "repeat( "+ len/2 + ", 81px)"); ;
	}

	function to_team_shot_chart(){
		canvas.getObjects().forEach(function(o){
			if(o.type != "Basket"){	
				o.set({opacity: 1})
			}
		});
		canvas.getObjects().forEach(function(o){
			if(o.type != "Basket"){	
				if(o.player == false ){
					o.set({opacity: 0})
				}
			}
		});	
		canvas.renderAll();
		
	}


	/**********************************************************************************************************************************************/
	/**********************************************************************************************************************************************/
	/*************************************************************** </SHOT CHARTS> ***************************************************************/
	/**********************************************************************************************************************************************/
	/**********************************************************************************************************************************************/



</script>